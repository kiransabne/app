- content_for :title do
  = I18n.t(:"meta.title.invoice.show", invoice_ref: invoice.ref_number)

.row#invoice{data: {id: invoice.ref}}

  .col-xs-12.col-md-12
    .row
      .col-xs-12.col-md-9
        %h1
          = I18n.t(:"headlines.invoice.show", invoice_ref: invoice.ref_number)
          - if invoice.charged? && invoice.payment_due_date < Time.now
            %small
              %span.label.label-danger.due-label
                = I18n.t(:"labels.invoice.due", date: time_ago_in_words(invoice.payment_due_date))

      .col-xs-12.col-md-3
        .btn-group.pull-right.resource-nav
          = link_to I18n.t(:"nav.subnav.back"), invoices_path, class: "btn btn-default"

    .row
      .col-xs-12.col-md-8
        #preview
          #preview-image{class: ('hide' unless invoice.pdf_present_and_up_to_date?)}
            - if invoice.pdf_present_and_up_to_date?
              %img{src: invoice_png_path(invoice.ref, invoice.invoice_file('png'))}
            - if invoice.timesheet_present_and_up_to_date?
              %img{src: timesheet_png_path(invoice.ref, invoice.timesheet_file('png'))}

          #preview-info{class: ('hide' if invoice.pdf_present_and_up_to_date?)}
            .panel.panel-default
              .panel-heading
                .panel-title
                  = I18n.t(:"pdf.not_generated")
              .panel-body
                = I18n.t(:"pdf.please_regenerate", generate: I18n.t(:"actions.generate"), regenerate: I18n.t(:"actions.regenerate"))

        = render 'kaminari/pdf_paginator'

      .col-xs-12.col-md-4
        .row
          .col-xs-12.col-md-12
            .btn-group.pull-right
              %button.ladda-button.btn.btn-primary.generate-invoice{data: {style: "expand-right", action: regenerate_pdf_invoice_path(invoice.ref)}, onclick: "App.Invoice.generate($(this)); return false;", class: ('generating' if invoice.pdf_generating)}
                .span.generate{class: ('hide' if invoice.pdf_present_or_generating? )}
                  %i.glyphicon.glyphicon-download-alt
                  = I18n.t(:"actions.generate")
                .span.regenerate{class: ('hide' if invoice.pdf_not_present_and_not_generating?)}
                  %i.glyphicon.glyphicon-refresh
                  = I18n.t(:"actions.regenerate")
              = confirm_link_to invoice_path(invoice.ref), data: {notyConfirm: I18n.t(:"messages.confirm.delete")}, method: :delete, class: "btn btn-danger" do
                %i.glyphicon.glyphicon-trash
                = I18n.t(:"actions.delete")

        .row
          .col-xs-12.col-md-12
            .loading.hide

        %br

        .row
          .col-xs-12.col-md-12
            .panel.panel-default
              .panel-heading
                .panel-title
                  %strong
                    = I18n.t(:"labels.panels.title.downloads")
              .list-group
                = link_to invoice_pdf_path(invoice.ref, invoice.invoice_file), target: "_blank", title: I18n.t(:"actions.download"), class: "save-invoice list-group-item#{(" disabled" if invoice.pdf_not_present_or_generating?)}" do
                  %i.glyphicon.glyphicon-download-alt
                  = I18n.t(:"actions.download_invoice")
                = link_to timesheet_pdf_path(invoice.ref, invoice.timesheet_file), target: "_blank", title: I18n.t(:"actions.download"), class: "save-timesheet list-group-item#{(" disabled" if invoice.timesheet_not_present_or_generating?)}#{(" hide" if invoice.timers.blank?)}" do
                  %i.glyphicon.glyphicon-download-alt
                  = I18n.t(:"actions.download_timesheet")

        %br
        .row
          .col-xs-12.col-md-12
            .panel.panel-default
              .panel-heading
                .panel-title
                  %strong
                    = I18n.t(:"labels.panels.title.default")
              .list-group
                - if can? :update, invoice
                  %a.list-group-item{href: edit_invoice_path(invoice.ref)}
                    %i.glyphicon.glyphicon-edit
                    = I18n.t(:"actions.edit")

                - if can? :charge, invoice
                  - charge_confirm = I18n.t(:"messages.confirm.charge")
                  - if invoice.send_via_mail?
                    - charge_confirm = I18n.t(:"messages.confirm.charge_mail")
                  = confirm_link_to charge_invoice_path(invoice.ref), data: {notyConfirm: charge_confirm}, title: I18n.t(:"actions.charge"), method: :put, class: "list-group-item" do
                    %i.glyphicon.glyphicon-envelope
                    = I18n.t(:"actions.charge")

                - if can? :pay, invoice
                  = link_to pay_invoice_path(invoice.ref), method: :put, class: "list-group-item" do
                    %i.glyphicon.glyphicon-ok
                    = I18n.t(:"actions.pay")

                = link_to archive_invoice_path(invoice.ref), method: :put, class: "list-group-item" do
                  %i.glyphicon.glyphicon-cloud-upload
                  = I18n.t(:"actions.archive")

                = link_to send_mail_invoice_path(invoice.ref), method: :put, class: "list-group-item" do
                  %i.glyphicon.glyphicon-send
                  = I18n.t(:"actions.send_invoice")
